package com.materialcentral.vulnerability.cvss

import org.geezer.db.DataEnum
import org.geezer.db.DataEnumType

/**
 * https://nvd.nist.gov/vuln-metrics/cvss
 */
enum class CvssVersion(override val id: Int, override val label: String) : DataEnum {
    V2(0, "V2") {
        override fun scoreToSeverity(score: Double): CvssSeverity {
            return if (score >= 7.0) {
                CvssSeverity.HIGH
            } else if (score >= 4.0) {
                CvssSeverity.MEDIUM
            } else if (score >= 0.0) {
                CvssSeverity.LOW
            } else {
                CvssSeverity.NONE
            }
        }
    },
    V3(1, "V3") {
        override fun scoreToSeverity(score: Double): CvssSeverity {
            return if (score >= 9.0) {
                CvssSeverity.CRITICAL
            } else if (score >= 7.0) {
                CvssSeverity.HIGH
            } else if (score >= 4.0) {
                CvssSeverity.MEDIUM
            } else if (score >= 0.1) {
                CvssSeverity.LOW
            } else {
                CvssSeverity.NONE
            }
        }
    };

    abstract fun scoreToSeverity(score: Double): CvssSeverity

    companion object : DataEnumType<CvssVersion> {
        override val enumValues: Array<CvssVersion> = values()
    }
}
