package com.materialcentral.scan.file.analysis

import arrow.core.NonEmptyList
import com.materialcentral.oss.PackageType
import com.materialcentral.scan.FindingSeverity
import com.materialcentral.scan.FindingType
import com.materialcentral.scan.analysis.AnalysisFinding

class KnownVulnerabilityAnalysisFinding(
    val vulnerabilityIdentifiers: NonEmptyList<String>,
    val packageType: PackageType,
    val packageName: String,
    val packageVersion: String,
    filePath: String?,
    layerId: String?,
    analyzerId: String,
    severity: FindingSeverity
) : FileAnalysisFinding(filePath, layerId, analyzerId, severity) {

    override val findingType: FindingType = FindingType.KNOWN_VULNERABILITY

    override fun associatedWithSameScanFinding(analysisFinding: AnalysisFinding): Boolean {
        return super.associatedWithSameScanFinding(analysisFinding) && ((analysisFinding is KnownVulnerabilityAnalysisFinding)
                && (vulnerabilityIdentifiers.intersect(analysisFinding.vulnerabilityIdentifiers).isNotEmpty()) && packageType == analysisFinding.packageType
                && packageName == analysisFinding.packageName && packageVersion == analysisFinding.packageVersion)
    }
}